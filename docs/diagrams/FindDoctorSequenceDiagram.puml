@startuml
!include style.puml

box Logic LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":AddressBookParser" as AddressBookParser LOGIC_COLOR
participant ":FindDoctorCommandParser" as FindDoctorCommandParser LOGIC_COLOR
participant "f:FindDoctorCommand" as FindDoctorCommand LOGIC_COLOR
participant ":CommandResult" as CommandResult LOGIC_COLOR
end box

box Model MODEL_COLOR_T1
participant ":Model" as Model MODEL_COLOR
participant "filter:DoctorFilter" as DoctorFilter MODEL_COLOR
participant "predicate:DoctorContainsKeywordsPredicate" as DoctorContainsKeywordsPredicate MODEL_COLOR
end box


[-> LogicManager : execute("find-doc args")
activate LogicManager

LogicManager -> AddressBookParser : parseCommand("find-doc args")
activate AddressBookParser

create FindDoctorCommandParser
AddressBookParser -> FindDoctorCommandParser
activate FindDoctorCommandParser

FindDoctorCommandParser --> AddressBookParser
deactivate FindDoctorCommandParser

AddressBookParser -> FindDoctorCommandParser : parse("args")
activate FindDoctorCommandParser

create DoctorFilter
FindDoctorCommandParser -> DoctorFilter : ("args")
activate DoctorFilter

DoctorFilter --> FindDoctorCommandParser : filter
deactivate DoctorFilter

create DoctorContainsKeywordsPredicate
FindDoctorCommandParser -> DoctorContainsKeywordsPredicate : filter
activate DoctorContainsKeywordsPredicate

DoctorContainsKeywordsPredicate --> FindDoctorCommandParser : predicate
deactivate DoctorContainsKeywordsPredicate

create FindDoctorCommand
FindDoctorCommandParser -> FindDoctorCommand : predicate
activate FindDoctorCommand

FindDoctorCommand --> FindDoctorCommandParser : f
deactivate FindDoctorCommand

FindDoctorCommandParser --> AddressBookParser : f
deactivate FindDoctorCommandParser
'Hidden arrow to position the destroy marker below the end of the activation bar.
FindDoctorCommandParser -[hidden]-> AddressBookParser
destroy FindDoctorCommandParser

AddressBookParser --> LogicManager : f
deactivate AddressBookParser

LogicManager -> FindDoctorCommand : execute()
activate FindDoctorCommand

FindDoctorCommand -> Model : updateFilteredDoctorList(predicate)
activate Model

Model --> FindDoctorCommand
deactivate Model

create CommandResult
FindDoctorCommand -> CommandResult
activate CommandResult

CommandResult --> FindDoctorCommand
deactivate CommandResult

FindDoctorCommand --> LogicManager : result
deactivate FindDoctorCommand

[<--LogicManager
deactivate LogicManager
@enduml
