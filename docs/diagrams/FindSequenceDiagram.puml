@startuml
!include style.puml

box Logic LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":ModTrekParser" as ModTrekParser LOGIC_COLOR
participant ":FindCommandParser" as FindCommandParser LOGIC_COLOR
participant "moduleCodePredicate:ModuleCodePredicate" as ModuleCodePredicate LOGIC_COLOR
participant ":FindCommand" as FindCommand LOGIC_COLOR
participant "commandResult:CommandResult" as CommandResult LOGIC_COLOR
end box

box Model MODEL_COLOR_T1
participant "model:ModelManager" as Model MODEL_COLOR
end box

[-> LogicManager : execute("find /m CS")
activate LogicManager

LogicManager -> ModTrekParser : parseCommand("find /m CS")
activate ModTrekParser

create FindCommandParser
ModTrekParser -> FindCommandParser
activate FindCommandParser

FindCommandParser --> ModTrekParser
deactivate FindCommandParser

ModTrekParser -> FindCommandParser : parse("/m CS")
activate FindCommandParser

create ModuleCodePredicate
FindCommandParser -> ModuleCodePredicate
activate ModuleCodePredicate
ModuleCodePredicate -> FindCommandParser
deactivate ModuleCodePredicate

create FindCommand
FindCommandParser -> FindCommand
activate FindCommand

FindCommand --> FindCommandParser : command
deactivate FindCommand

FindCommandParser --> ModTrekParser : command
deactivate FindCommandParser

ModTrekParser --> LogicManager : command
deactivate ModTrekParser

LogicManager -> FindCommand : execute(model)
activate FindCommand

FindCommand -> Model : updateFilteredModuleList(moduleCodePredicate)
activate Model

Model --> FindCommand
deactivate Model

create CommandResult
FindCommand -> CommandResult
activate CommandResult

CommandResult --> FindCommand
deactivate CommandResult

FindCommand --> LogicManager : commandResult
deactivate FindCommand

[<--LogicManager
deactivate LogicManager
@enduml
