@startuml
!include style.puml

box User UI_COLOR_T1
participant ":User" as User UI_COLOR
end box

box Logic LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":AddressBookParser" as AddressBookParser LOGIC_COLOR
participant ":Matcher" as Matcher LOGIC_COLOR
participant ":ToDoCommandParser" as ToDoCommandParser LOGIC_COLOR
participant ":ToDoCommand" as ToDoCommand LOGIC_COLOR
end box

box Model MODEL_COLOR_T1
participant "toAdd:Task" as Task MODEL_COLOR
participant ":TaskBookModel" as TaskBookModel MODEL_COLOR
end box

User -> LogicManager : execute(commandText)
activate LogicManager

LogicManager -> AddressBookParser : parseCommand(commandText)
activate AddressBookParser

AddressBookParser -> Matcher : group("commandWord")
activate Matcher
Matcher --> AddressBookParser : commandWord
deactivate Matcher

AddressBookParser -> Matcher : group("arguments")
activate Matcher
Matcher --> AddressBookParser : arguments
deactivate Matcher

create ToDoCommandParser
AddressBookParser -> ToDoCommandParser : ToDoCommandParser()
activate ToDoCommandParser

create Task
ToDoCommandParser -> Task
activate Task
Task --> ToDoCommandParser
deactivate Task

create ToDoCommand
ToDoCommandParser -> ToDoCommand
activate ToDoCommand
ToDoCommand --> ToDoCommandParser
deactivate ToDoCommand

ToDoCommandParser --> AddressBookParser :
deactivate ToDoCommandParser

AddressBookParser --> LogicManager :
deactivate AddressBookParser



LogicManager -> ToDoCommand : execute(model,taskBookModel)
activate ToDoCommand

ToDoCommand -> TaskBookModel : addTask(toAdd)
activate TaskBookModel

TaskBookModel --> ToDoCommand
deactivate TaskBookModel

ToDoCommand --> LogicManager : CommandResult
deactivate ToDoCommand

LogicManager --> User : CommandResult
deactivate LogicManager

@enduml
