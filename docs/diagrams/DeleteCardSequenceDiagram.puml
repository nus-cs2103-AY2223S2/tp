@startuml
!include style.puml

box Logic LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":MasterDeckParser" as MasterDeckParser LOGIC_COLOR
participant ":DeleteCardCommandParser" as DeleteCardCommandParser LOGIC_COLOR
participant "d:DeleteCardCommand" as DeleteCardCommand LOGIC_COLOR
participant ":CommandResult" as CommandResult LOGIC_COLOR
end box

box Model MODEL_COLOR_T1
participant ":Model" as Model MODEL_COLOR
end box

[-> LogicManager : execute("deleteCard 1")
activate LogicManager

LogicManager -> Model : getState()
activate Model
Model --> LogicManager : state
deactivate Model
alt Main_Selected_Mode
    LogicManager -> MasterDeckParser : parseCommand("deleteCard 1")
    activate MasterDeckParser
    create DeleteCardCommandParser
    MasterDeckParser -> DeleteCardCommandParser
    activate DeleteCardCommandParser

    DeleteCardCommandParser --> MasterDeckParser
    deactivate DeleteCardCommandParser

    MasterDeckParser -> DeleteCardCommandParser : parse("1")
    activate DeleteCardCommandParser

    create DeleteCardCommand
    DeleteCardCommandParser -> DeleteCardCommand
    activate DeleteCardCommand

    DeleteCardCommand --> DeleteCardCommandParser : d
    deactivate DeleteCardCommand

    DeleteCardCommandParser --> MasterDeckParser : d
    deactivate DeleteCardCommandParser
    'Hidden arrow to position the destroy marker below the end of the activation bar.
    DeleteCardCommandParser -[hidden]-> MasterDeckParser
    destroy DeleteCardCommandParser
    MasterDeckParser --> LogicManager : d
    deactivate MasterDeckParser

    LogicManager -> DeleteCardCommand : execute()
    activate DeleteCardCommand

    DeleteCardCommand -> Model : deleteCard(c)
    activate Model
    Model --> DeleteCardCommand
    deactivate Model

    create CommandResult
    DeleteCardCommand -> CommandResult
    activate CommandResult

    CommandResult --> DeleteCardCommand
    deactivate CommandResult

    DeleteCardCommand --> LogicManager : result
    deactivate DeleteCardCommand

else else
    LogicManager -> MasterDeckParser : parseCommand("deleteCard 1")
    activate MasterDeckParser
    MasterDeckParser --> LogicManager : ParseException
    deactivate MasterDeckParser

end
[<--LogicManager
deactivate LogicManager
@enduml
