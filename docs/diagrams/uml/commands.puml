@startuml commands
skinparam defaultTextAlignment left
' scale 0.6
hide empty members
hide circle
skinparam classAttributeIconSize 0


interface Command {
    + abstract execute(dataModel: DataModel): CommandResult
}

class CommandResult {
    + ComandResult(feedbackToUser: String, screenType: ScreenType)
    + CommandResult(feedbackToUser: String, screenType: ScreenType, \
      showHelp: boolean, exit: boolean)
    + getFeedbackToUser(): String
    + getScreenType(): ScreenType
    + isShowHelp(): boolean
    + isExit(): boolean
    - feedbackToUser: String
    - screenType: ScreenType
    - showHelp: boolean
    - exit: boolean
}

interface AddCommand extends Command {
}

interface DeleteCommand extends Command {
}

interface EditCommand extends Command {
}

interface ListCommand extends Command {
}

interface GeneralCommand extends Command {
}

class SetBudgetCommand {
    + SetBudgetCommand(budget: Budget)
    - budget: Budget
}

Command <.. SetBudgetCommand
Command "1" *-- "1" CommandResult

@enduml

@startuml add_commands

skinparam defaultTextAlignment left
' scale 0.6
hide empty members
hide circle
skinparam classAttributeIconSize 0

' COMMAND_WORD, MESSAGE_USAGE< MESSSAGE_SUCCESS, MESSAGE_DUPLICATE_CATEGORY are not shown
interface AddCommand {
    + abstract execute(dataModel: DataModel): CommandResult
}

class AddCategoryCommand {}

class AddExpenseCommand {
    + AddExpenseCommand(expense: Expense)
    - expense: Expense
}

class AddRecurringExpenseCommand {
    + AddRecurringExpenseCommand(toAdd: RecurringExpenseManager)
    - toAdd: RecurringExpenseManager
}

class CategorySummaryCommand {
    + CategorySummaryCommand(index: Index)
    - index: Index
}

AddCommand <|-- AddCategoryCommand
AddCommand <|-- AddExpenseCommand
AddCommand <|-- AddRecurringExpenseCommand

@enduml

@startuml delete_commands

skinparam defaultTextAlignment left
' scale 0.6
hide empty members
hide circle
skinparam classAttributeIconSize 0

interface DeleteCommand {}

class DeleteCategoryCommand {
    + DeleteCategoryCommand(index: Index)
    - index: Index
}

class DeleteExpenseCommand {
    + DeleteExpenseCommand(index: Index)
    - index: Index
}

class DeleteRecurringExpenseCommand {
    + DeleteRecurringExpenseCommand(index: Index)
    - index: Index
}

DeleteCommand <.. DeleteCategoryCommand
DeleteCommand <.. DeleteExpenseCommand
DeleteCommand <.. DeleteRecurringExpenseCommand

@enduml

@startuml edit_commands

skinparam defaultTextAlignment left
' scale 0.6
hide empty members
hide circle
skinparam classAttributeIconSize 0

interface EditCommand {}

class EditCategoryCommand {
    + EditCategoryCommand(index: Index, newCategoryName: String, newSummary: String)
    - index: Index
    - newCategoryName: String
    - newSummary: String
}

class EditExpenseCommand {
    ' + EditExpenseCommand(index: Index, newExpenseName: String, newExpenseAmount: Double, \
      newExpenseDate: LocalDate, newExpenseCategory: Category) '
    - index: Index
    - newExpenseName: String
    - newExpenseAmount: Double
    - newExpenseDate: LocalDate
    - newExpenseCategory: Category
}

class EditRecurringExpenseManagerCommand {
    ' + EditRecurringExpenseManagerCommand(index: Index, newExpenseName: String, \
      newExpenseAmount: Double, newExpenseCategoryInString: String, \
      newExpenseEndDate: LocalDate, newFrequencyInString: String) '
    - index: Index
    - newExpenseName: String
    - newExpenseAmount: Double
    - newExpenseCategoryInString: String
    - newExpenseEndDate: LocalDate
    - newFrequencyInString: String
}


EditCommand <.. EditCategoryCommand
EditCommand <.. EditExpenseCommand
EditCommand <.. EditRecurringExpenseManagerCommand

@enduml

@startuml list_commands

skinparam defaultTextAlignment left
' scale 0.6
hide empty members
hide circle
skinparam classAttributeIconSize 0

interface ListCommand {}

class ListCategoryCommand {}

class ListExpensesCommand {
    ' + ListCategoriesCommand(categoryPredicate: Optional<ExpenseInCategoryPredicate>, \
      timespanPredicate: Optional<ExpenseInTimespanPredicate>) '
    - categoryPredicate: Optional<ExpenseInCategoryPredicate>
    - timespanPredicate: Optional<ExpenseInTimespanPredicate>
}

class ListRecurringExpenseCommand {}


ListCommand <.. ListCategoryCommand
ListCommand <.. ListExpensesCommand
ListCommand <.. ListRecurringExpenseCommand

@enduml

@startuml general_commands

skinparam defaultTextAlignment left
' scale 0.6
hide empty members
hide circle
skinparam classAttributeIconSize 0

interface GeneralCommand {}

class ClearCommand {}

class ExitCommand {}

class FindCommand {
    + FindCommand(predicate: ExpenseContainsKeywordsPredicate)
    - predicate: ExpenseContainsKeywordsPredicate
}

class HelpCommand {}

GeneralCommand <.. CategorySummaryCommand
GeneralCommand <.. ClearCommand
GeneralCommand <.. ExitCommand
GeneralCommand <.. FindCommand
GeneralCommand <.. HelpCommand

@enduml

