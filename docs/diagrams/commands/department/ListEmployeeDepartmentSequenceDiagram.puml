@startuml
!include ../../style.puml

box Logic LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":SudoHrParser" as SudoHrParser LOGIC_COLOR
participant ":ListEmployeeDepartmentCommandParser" as ListEmployeeDepartmentCommandParser LOGIC_COLOR
participant "id:Id" as Id LOGIC_COLOR
participant "predicate:DepartmentContainsEmployeePredicate" as DepartmentContainsEmployeePredicate LOGIC_COLOR
participant ":ListEmployeeDepartmentCommand" as ListEmployeeDepartmentCommand LOGIC_COLOR
participant ":CommandResult" as CommandResult LOGIC_COLOR
end box

box Model MODEL_COLOR_T1
participant ":Model" as Model MODEL_COLOR
end box

[-> LogicManager : execute("led eid/100")
activate LogicManager

LogicManager -> SudoHrParser : parseCommand("led eid/100")
activate SudoHrParser

create ListEmployeeDepartmentCommandParser
SudoHrParser -> ListEmployeeDepartmentCommandParser
activate ListEmployeeDepartmentCommandParser

ListEmployeeDepartmentCommandParser --> SudoHrParser
deactivate ListEmployeeDepartmentCommandParser

SudoHrParser -> ListEmployeeDepartmentCommandParser: parse("eid/100")
activate ListEmployeeDepartmentCommandParser

create Id
ListEmployeeDepartmentCommandParser -> Id
activate Id

Id --> ListEmployeeDepartmentCommandParser
deactivate Id

create DepartmentContainsEmployeePredicate
ListEmployeeDepartmentCommandParser -> DepartmentContainsEmployeePredicate
activate DepartmentContainsEmployeePredicate

DepartmentContainsEmployeePredicate --> ListEmployeeDepartmentCommandParser
deactivate DepartmentContainsEmployeePredicate

create ListEmployeeDepartmentCommand
ListEmployeeDepartmentCommandParser -> ListEmployeeDepartmentCommand
activate ListEmployeeDepartmentCommand

ListEmployeeDepartmentCommand --> ListEmployeeDepartmentCommandParser
deactivate ListEmployeeDepartmentCommand

ListEmployeeDepartmentCommandParser -> SudoHrParser
deactivate ListEmployeeDepartmentCommandParser

ListEmployeeDepartmentCommandParser -[hidden]-> SudoHrParser
destroy ListEmployeeDepartmentCommandParser

SudoHrParser --> LogicManager
deactivate SudoHrParser

LogicManager -> ListEmployeeDepartmentCommand : execute(model)
activate ListEmployeeDepartmentCommand

ListEmployeeDepartmentCommand -> DepartmentContainsEmployeePredicate : getId()
activate DepartmentContainsEmployeePredicate

DepartmentContainsEmployeePredicate --> ListEmployeeDepartmentCommand
deactivate DepartmentContainsEmployeePredicate

ListEmployeeDepartmentCommand -> Model : getEmployee(id)
activate Model

Model --> ListEmployeeDepartmentCommand
deactivate Model

ListEmployeeDepartmentCommand -> Model : updateFilteredDepartmentList
activate Model

Model --> ListEmployeeDepartmentCommand
deactivate Model

create CommandResult
ListEmployeeDepartmentCommand -> CommandResult
activate CommandResult

CommandResult --> ListEmployeeDepartmentCommand
deactivate CommandResult

ListEmployeeDepartmentCommand --> LogicManager : result
deactivate ListEmployeeDepartmentCommand

[<--LogicManager
deactivate LogicManager
@enduml
