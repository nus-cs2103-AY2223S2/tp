@startuml
!include style.puml

box Ui UI_COLOR_T1
participant ":MainWindow" as MainWindow UI_COLOR
end box

box Logic LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":WingmanParser" as WingmanParser LOGIC_COLOR
participant ":CommandGroup" as CommandGroup LOGIC_COLOR
participant ":FactoryParser" as FactoryParser LOGIC_COLOR
participant ":DeleteCommandFactory" as DeleteCommandFactory LOGIC_COLOR
participant "command:DeleteCommand" as DeleteCommand LOGIC_COLOR
participant ":DeleteFunction" as DeleteFunction LOGIC_COLOR
end box

box Model MODEL_COLOR_T1
participant ":ModelManager" as ModelManager MODEL_COLOR
end box

[-> MainWindow : executeCommand("delete 1")
activate MainWindow

MainWindow -> LogicManager : execute("delete 1")
activate LogicManager

LogicManager -> WingmanParser : parse(getOperationMode(), "delete 1")
activate WingmanParser

WingmanParser -> CommandGroup : parse(tokens)
activate CommandGroup

CommandGroup -> FactoryParser : parseFactory(tokens)
activate FactoryParser

FactoryParser -> DeleteCommandFactory : createCommand(commandParam)
activate DeleteCommandFactory



create DeleteCommand
DeleteCommandFactory -> DeleteCommand
activate DeleteCommand

DeleteCommand --> DeleteCommandFactory : command
deactivate DeleteCommand

DeleteCommandFactory --> FactoryParser : command
deactivate DeleteCommandFactory

FactoryParser --> CommandGroup : command
deactivate FactoryParser

CommandGroup --> WingmanParser : command
deactivate CommandGroup

WingmanParser --> LogicManager : command
deactivate WingmanParser

LogicManager -> DeleteCommand : execute(model)
activate DeleteCommand

DeleteCommand -> DeleteFunction : delete(model, xyz)
activate DeleteFunction

DeleteFunction -> ModelManager : deleteXYZ(xyz)
activate ModelManager

ModelManager --> DeleteFunction : commandResult
deactivate ModelManager

DeleteFunction --> DeleteCommand : commandResult
deactivate DeleteFunction

DeleteCommand --> LogicManager : commandResult
deactivate DeleteCommand

LogicManager --> MainWindow : commandResult
deactivate LogicManager

[<-- MainWindow
deactivate MainWindow

@enduml
