@startuml
!include style.puml

box Logic LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":AddressBookParser" as AddressBookParser LOGIC_COLOR
participant ":AddCommandParser" as AddCommandParser LOGIC_COLOR
participant "command:AddCommand" as AddCommand LOGIC_COLOR
end box
box Model MODEL_COLOR_T1
participant ":Model" as Model MODEL_COLOR
end box
box Addressbook ADDRESSBOOK_COLOR_T1
participant ":Addressbook" as Addressbook ADDRESSBOOK_COLOR
end box

[-> LogicManager : execute(add)
activate LogicManager

LogicManager -> AddressBookParser : parseCommand(add)
activate AddressBookParser

create AddCommandParser
AddressBookParser -> AddCommandParser
activate AddCommandParser

AddCommandParser --> AddressBookParser
deactivate AddCommandParser

AddressBookParser -> AddCommandParser : parse(args)
activate AddCommandParser

create AddCommand
AddCommandParser -> AddCommand
activate AddCommand

AddCommand --> AddCommandParser
deactivate AddCommand

AddCommandParser --> AddressBookParser : command
deactivate AddCommandParser

AddressBookParser -[hidden]-> AddressBookParser : command
destroy AddCommandParser

AddressBookParser --> LogicManager : command
deactivate AddressBookParser

LogicManager -> AddCommand : execute(model)
activate AddCommand

AddCommand -> Model : hasPerson(toAdd)
activate Model

Model -> Addressbook : hasPerson(toAdd)
activate Addressbook

Addressbook --> Model : result
deactivate Addressbook

Model --> AddCommand : result
deactivate Model

AddCommand -> Model : addPerson(toAdd)
activate Model

Model -> Addressbook : addPerson(toAdd)
activate Addressbook

Addressbook --> Model : result
deactivate Addressbook

Model --> AddCommand : result
deactivate Model

AddCommand --> LogicManager :commandResult
deactivate AddCommand

AddCommand -[hidden]-> LogicManager : result
destroy AddCommand

[<--LogicManager : commandResult
deactivate LogicManager

@enduml
